{"version":3,"sources":["./src/app/self-care/self-common-service/settings/settings.service.ts","./src/app/sqlite-database/database.ts"],"names":[],"mappings":"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","file":"default~about-about-module~alerts-alerts-module~appointments-appointments-module~contact-contact-mod~a6b775d3-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import { environment } from '../../../../environments/environment'\nimport { Observable } from 'rxjs/Rx';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class settingsService {\n\n  constructor(private http: HttpClient) {\n  }\n   relatedto(){  \n    return this.http.get(\"enum_masters?category_name=health_diary\")\n   }\n  aboutUpdate(detail){\n\t  return this.http.post(\"health_details/about_update\",detail)\n  }\n  \n  aboutDetail(){\n\t  return this.http.get(\"health_details/about\")\n  }\n\n  getPreview(id){\n    return this.http.get(\"users/user_details?user_uid=\"+id)\n  }\n\n  setting(){\n    return this.http.get(\"users/picture_show\")\n  }\n\n  editprofile(val,id){\n    return this.http.put(\"users/\"+id,val)\n  }\n\n  sendimage(val){\n    return this.http.post(\"users/profile_picture\",val)\n  }\n\n  contactDetails(){\n    return this.http.get(\"emergency_details\")\n  }\n\n  addContacts(user_details){\n    return this.http.post(\"emergency_details\",user_details)\n  }\n\n  deleteData(id){\n    return this.http.delete(\"emergency_details/\"+id)\n  }\n  deleteCaregiver(id){\n    return this.http.get(\"emergency_details/caregiver_delete?cg_id=\"+id)\n  }\n\n  commonEventList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=DESC&&sort=created_at&&per_page=10&&page=\"+page)\n  }\n\n  commonDateEventList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=DESC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n\n  commonAppointmentDateEventList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=ASC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n \n  commonEventSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=DESC&&sort=created_at\")\n  }\n\n  commonDateEventSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=DESC&&sort=event_datetime\")\n  }\n\n  commonAppointmentSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=ASC&&sort=event_datetime\")\n  }\n\n  \n  commonVitalList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=DESC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n\n  commonVitalSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=DESC&&sort=event_datetime\")\n  }  \n\n  commonDeleteEvent(id){\n    return this.http.delete(\"events/\"+id)\n  }\n\n  commonPost(record){\n    return this.http.post(\"events\",record)\n  }\n\n  vitalCommonPost(record){\n        return this.http.post(\"events/vital_update\",record)\n  }\n  commonUpdatePost(id,record){\n    return this.http.put(\"events/\"+id,record)\n  }\n\n  myEmergencyHealthDetail(){\n    return this.http.get(\"health_details\")\n  }\n\n  myEmergencyHealthUpdate(data){\n    return this.http.post(\"health_details\",data)\n  }\n\n  myEmergencyPreview(){\n    return this.http.get(\"users/preview\")\n  }\n\n  reportType(){\n    return this.http.get(\"enum_masters?category_name=report\")\n  }\n\n  deleteImage(data){\n    return this.http.post(\"events/delete_image\",data)\n  }\n\n  vitaldelete(data){\n    return this.http.put(\"events/vital_delete\",data) \n  }\n  vitalReading(){\n    return this.http.get(\"enum_masters?category_name=vital\")    \n  }\n  vitalFoodTime(){\n    return this.http.get(\"enum_masters?category_name=food_time\")\n\n  }\n  view_expenses(id){\n    return this.http.get(\"events/expense_list?user_id=\"+id);\n  \n  }\n  event_view_delete(id){\n    return this.http.delete(\"events/\"+id);\n  }\n  event_add_option(){\n    return this.http.get(\"enum_masters?category_name=spent_place\");\n  }\n  event_add(value){\n    return this.http.post(\"events\",value); \n  }\n  view_expenses_cal(id){\n    return this.http.get(\"events/expense_calculation?user_id=\"+id)\n  }\n  chartrepeat(id){\n    return this.http.get(\"events/expense_chart?user_id=\"+id)\n  }\n  main_chart(id){\n    return this.http.get(\"events/expense_cals_chart?user_id=\"+id)\n  }\n  filterChart(id,data){\n    return this.http.post(\"events/expense_chart_filter?user_id=\"+id,data)\n  }\n  filterAmount(from,to,id){\n    return this.http.get(\"events/expense_list?from_date=\"+from+\"&&end_date=\"+to+\"&&user_id=\"+id); \n  }\n\n  Appointmentdropdown(){\n    return this.http.get(\"enum_masters?category_name=appointment\")\n  }\n  appointmentDetails(data){\n    return this.http.post(\"events\",data)\n  }\n  \n  EditDetails(id,data){\n    return this.http.put(\"events/\"+id,data)\n  }\n  \n  recentAppointment(id){\n    return this.http.get(\"events/appointment_list?user_id=\"+id); \n  }\n  record_filter(data){\n    console.log(data)\n    return this.http.post(\"events/diary_recording?\",data)\n  }\n\n  completedAppointmentEventList(event_type,page){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&tab=history&&order=DESC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n  completedAppointmentSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&tab=history&&order=DESC&&sort=event_datetime\")\n  }\n\n  vitalFoodTime1(){\n    return this.http.get(\"enum_masters?category_name=food_time_1\")\n\n  }\n  vitalFoodTime2(){\n    return this.http.get(\"enum_masters?category_name=food_time_2\")\n\n  }\n  vitalEventListNew(id){\n    return this.http.get(\"events/vitals_list1?user_id=\"+id)\n  }\n  reading_history(event,id,page,count){\n    return this.http.get(\"events/vital_history?event_name=\"+event+\"&&user_id=\"+id+\"&&page=\"+page+\"&&per_page=\"+count)\n  }\n  filterReading(event,id,page,count,from,end){\n    return this.http.get(\"events/vital_history?event_name=\"+event+\"&&user_id=\"+id+\"&&page=\"+page+\"&&per_page=\"+count+\"&&from_date=\"+from+\"&&end_date=\"+end)\n\n  }\n  vitalEventList(id){\n    return this.http.get(\"events/vital_names_list?user_id=\"+id)\n  }\n  vitalfilter(id,data){\n    return this.http.post(\"events/vitals_list1?user_id=\"+id,data)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { SQL_TABLES } from './database.interface';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { from, Observable, forkJoin  } from 'rxjs';\n//import { NetworkService } from '../network-connectivity/network-service';\nimport { syncProvider } from '../sync/sync'\nimport { async } from 'q';\n\n/*\n  Generated class for the DatabaseProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\nconst DATA_BASE_NAME = 'BCared4.db';\n\nenum user_type {\n    \"Emergency\" = 1,\n    \"Doctor\" = 2,\n    \"Care Giver\" = 3\n}\n\n@Injectable({providedIn:'root'})\nexport class DatabaseProvider {\n  \n  database: SQLiteObject;\n  ready: Promise<void>;\n  isNetworkOnline:boolean;\n  responseData1:any[];\n  responseData2:any[];\n  responseData3:any[];\n  responseData4:any[]; \n  \n    constructor(public sqlite: SQLite, private platform: Platform,public syncProvide:syncProvider) {\n        this.Oninit();   \n    }\n\n    Oninit(){\n        console.log('Oninit')\n        //console.log(user_type[3])\n        this.ready = this.platform.ready()\n            .then(() => this.initializeDatabase())\n            .then(() => this.bootstrapTables())\n    }\n\n    initializeDatabase() {\n        console.log('initialize')\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then(async (db: SQLiteObject) => {\n           let sqlTable1 = `CREATE TABLE IF NOT EXISTS emergency_details(id INTEGER,emergency_id INTEGER PRIMARY KEY AUTOINCREMENT,contact_name TEXT DEFAULT NULL,emergency_no TEXT DEFAULT NULL,user_type TEXT,user_id INTEGER,created_at DATETIME,updated_at DATETIME,delete1 BOOLEAN)`;\n           await db.executeSql(sqlTable1, []);\n            // .then((res)=>{\n            //    console.log(res,'emergencysuccess')\n            // }).catch(err=>{console.log(err,'emergencyerror')});\n           let sqlTable2 = `CREATE TABLE IF NOT EXISTS enum_masters(id INTEGER,name TEXT,category_name TEXT,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable2, []);\n           \n           let sqlTable4 = `CREATE TABLE IF NOT EXISTS health_details(id INTEGER,health_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,attribute_name_value TEXT DEFAULT NULL,user_id INTEGER,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable4, []);\n           let sqlTable5 = `CREATE TABLE IF NOT EXISTS users(id INTEGER,name TEXT,email TEXT,password TEXT DEFAULT NULL,mobile_no TEXT DEFAULT NULL,address TEXT DEFAULT NULL,country TEXT DEFAULT NULL,blood_group TEXT DEFAULT NULL,age INTEGER DEFAULT NULL,user_uid TEXT,forgot_password_code TEXT DEFAULT NULL,user_picture TEXT DEFAULT NULL,active_status TEXT,role_id INTEGER,created_at DATETIME,updated_at DATETIME,delete1 BOOLEAN)`;  //userRecord_id INTEGER PRIMARY KEY AUTOINCREMENT\n           await db.executeSql(sqlTable5, []);\n           let sqlTable6 = `CREATE TABLE IF NOT EXISTS user_associations(id INTEGER,patient_id INTEGER,caregiver_id INTEGER,nick_name TEXT DEFAULT NULL,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable6, []);\n           let sqlTable3 = `CREATE TABLE IF NOT EXISTS events(id INTEGER,event_id INTEGER PRIMARY KEY AUTOINCREMENT,event_name TEXT,description TEXT,value TEXT DEFAULT NULL,event_datetime INTEGER,event_type TEXT,event_category TEXT,event_assets TEXT DEFAULT NULL,event_options TEXT DEFAULT NULL,user_id INTEGER,created_at DATETIME,updated_at DATETIME,sync BOOLEAN)`;\n           await db.executeSql(sqlTable3, [])\n           .then(async() =>{\n             let sqlTableIndex = `CREATE INDEX IF NOT EXISTS event_index on events(event_type, event_datetime, created_at)`;\n             await db.executeSql(sqlTableIndex, []);  \n           });\n        })\n    }\n\n    async bootstrapTables(){\n        console.log('bootstrap')\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            return db.executeSql(`SELECT * FROM enum_masters`, []).then(async (data) => {\n            console.log('bootstrap1')\n            //   if(data.rows.length==0){\n            //    await this.getTotalEnumMasters(db);\n            //   }\n            //   let user_id = await this.getuserID();\n            //   if(user_id!=undefined){\n            //     await this.awaitAllUsersTableData(db);\n            //   }\n             await this.syncProvide.initiateSync();\n            }) \n        }) \n    }\n\n    getDatabase() {\n        return this.ready.then(() => {\n            return this.sqlite.create({\n                name: DATA_BASE_NAME,\n                location: 'default'\n            }).then((db: SQLiteObject) => {\n                return db;\n            })\n        });\n    }\n\n    async createAnEvent(data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `INSERT INTO events VALUES (NULL,NULL,?,?,?,?,?,?,?,?,?,?,?,?)`;\n            let createEventData = [data[\"event_name\"],data[\"description\"],data[\"value\"],data[\"event_datetime\"],data[\"event_type\"],data[\"event_category\"],data[\"event_assets\"],JSON.stringify(data[\"event_options\"]),user_id,new Date().toJSON(),new Date().toJSON(),false]\n            return db.executeSql(sql,createEventData).then((row: any)=>{  \n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            });\n        })\n    }\n\n    async updateAnEvent(id,data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `UPDATE events SET id = ?, event_name = ?, description = ?, value = ?, event_datetime = ?, event_type = ?, event_category = ?, event_assets = ?, event_options = ?, user_id = ?, created_at = ?, updated_at = ?, sync = ? WHERE event_id = ?`;\n            let updateEventData = [data[\"id\"],data[\"event_name\"],data[\"description\"],data[\"value\"],data[\"event_datetime\"],data[\"event_type\"],data[\"event_category\"],data[\"event_assets\"],JSON.stringify(data[\"event_options\"]),user_id,data[\"created_at\"],new Date().toJSON(),false,id]\n            \n            return db.executeSql(sql,updateEventData).then((row: any)=>{\n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            })\n        })\n    }\n\n    async updateAnEventImage(id,data) {\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `UPDATE events SET event_options = ? WHERE event_id = ?`;\n            let updateEventImageData = [JSON.stringify(data[\"event_options\"]),id]\n            \n            return db.executeSql(sql,updateEventImageData).then((row: any)=>{\n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            })\n        })\n    }\n\n    deleteAnEvent(id){\n       return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => { \n          let sql = `DELETE FROM events WHERE event_id = ?`;\n          return db.executeSql(sql,[id]).then((row: any)=>{\n            return { event_id:row.insertId }\n         }).catch(res=>{\n            return res;\n         });\n        })\n    }\n\n    async updateUserAndPolicyData(data){\n      console.log(data)\n      let user_id = await this.getuserID();\n      let user_data = data['user'];\n      let policy_data = data['policy'];\n      policy_data[\"name\"]=\"policy\";\n      console.log(policy_data)\n      return this.sqlite.create({\n        name: DATA_BASE_NAME,\n        location: 'default'\n      }).then(async(db: SQLiteObject) => {\n           \n         let sql = `UPDATE users SET age = ?, blood_group = ? WHERE id = ? AND role_id = ?`;\n         let updateUserData = [user_data['age'],user_data['blood_group'],user_id,1];\n         await db.executeSql(sql,updateUserData);\n         await db.executeSql(`SELECT * FROM health_details WHERE name='${policy_data['name']}'`,[]).then(async(data)=>{\n           console.log(data)\n            if(data.rows.length>0){\n             let id = data.rows.item(0).health_id;\n             console.log(policy_data,id)\n             this.updateHealthData(policy_data,id);\n           }else{\n            console.log(policy_data)\n             this.updateHealthData(policy_data);\n           } \n         },error=>{\n             console.log(error)\n         })\n      },error=>{\n          console.log(error)\n      })     \n    }\n\n    async updateUserData(data){\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then(async(db: SQLiteObject) => {\n            let sql = `UPDATE users SET name = ?, email = ?, mobile_no = ? WHERE id = ? AND role_id = ?`;\n            let updateUserData = [data['name'],data['email'],data['mobile_no'],user_id,1];\n            await db.executeSql(sql,updateUserData).then((row: any)=>{\n                return { event_id:row.insertId }\n             }).catch(res=>{\n                return res;\n             });\n        })\n    }\n\n    async updateUserImage(data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `UPDATE users SET user_picture = ? WHERE id = ?`;\n            let updateEventImageData = [JSON.stringify(data),user_id]\n            \n            return db.executeSql(sql,updateEventImageData).then((row: any)=>{\n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            })\n        })\n    }\n\n    async createEmergencyContacts(data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `INSERT INTO emergency_details VALUES (NULL,NULL,?,?,?,?,?,?,?)`;\n            let createEventData = [data[\"contact_name\"],data[\"emergency_no\"],user_type[data[\"user_type\"]],user_id,new Date().toJSON(),new Date().toJSON(),false]\n            return db.executeSql(sql,createEventData).then((row: any)=>{  \n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            });\n        })\n    }\n\n    deleteEmergencyContact(id){\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => { \n          let sql = `DELETE FROM emergency_details WHERE emergency_id = ?`;\n          return db.executeSql(sql,[id]).then((row: any)=>{\n            return { event_id:row.insertId }\n         }).catch(res=>{\n            return res;\n         });\n        })\n    }\n\n    deleteCaregiverContact(id){\n        return this.sqlite.create({\n             name: DATA_BASE_NAME,\n             location: 'default'\n        }).then((db: SQLiteObject) => {\n           let sql = `UPDATE users SET delete1 = ? WHERE id = ?`;\n           return db.executeSql(sql,[true,id]).then((row: any)=>{\n            return { event_id:row.insertId }\n           }).catch(res=>{\n            return res;\n           });\n        })\n     }\n\n    async updateHealthData(data?,id?) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            return db.executeSql(`SELECT * FROM health_details WHERE name='${data['name']}'`,[]).then(async(getData)=>{\n              let sqlQuery:any;\n              let healthData:any;\n              console.log(data)\n              if(getData.rows.length>0){\n                sqlQuery = `UPDATE health_details SET id = ?, name = ?, attribute_name_value = ?, user_id = ?, created_at = ?, updated_at = ? WHERE health_id = ?`;\n                healthData = [data[\"id\"],data[\"name\"],JSON.stringify(data[\"attribute_name_value\"]),user_id,data[\"created_at\"],new Date().toJSON(),id]    \n              }else{\n                sqlQuery = `INSERT INTO health_details VALUES (NULL,NULL,?,?,?,?,?)`;\n                healthData = [data[\"name\"],JSON.stringify(data[\"attribute_name_value\"]),user_id,new Date().toJSON(),new Date().toJSON()];\n              }\n              console.log(sqlQuery);\n              console.log(healthData)\n              return db.executeSql(sqlQuery,healthData).then((row: any)=>{\n                console.log(row)   \n                return { event_id:row.insertId }\n              }).catch(res=>{\n                    console.log(res)  \n                    return res;\n              })\n            }).catch(res=>{\n                console.log(res);\n                return res;\n            })\n        })\n    }\n\n    deleteDataFromTable(){\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => { \n           for(let i in SQL_TABLES){\n            let sql = `DELETE FROM ${SQL_TABLES[i]}`;\n            db.executeSql(sql,[]);\n           } \n          \n        })\n    }\n\n    getuserID(){\n        let user_id:any=null;\n        if(localStorage.getItem(\"user_id\")!=undefined){\n            user_id=localStorage.getItem(\"user_id\");\n            return user_id;\n        }\n        \n        return user_id\n    }\n\n}\n"],"sourceRoot":""}