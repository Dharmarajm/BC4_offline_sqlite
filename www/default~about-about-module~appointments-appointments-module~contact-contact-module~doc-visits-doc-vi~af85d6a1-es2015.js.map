{"version":3,"sources":["./src/app/self-care/self-common-service/settings/settings.service.ts","./src/app/sqlite-database/database.ts"],"names":[],"mappings":"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","file":"default~about-about-module~appointments-appointments-module~contact-contact-module~doc-visits-doc-vi~af85d6a1-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import { environment } from '../../../../environments/environment'\nimport { Observable } from 'rxjs/Rx';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class settingsService {\n\n  constructor(private http: HttpClient) {\n  }\n   relatedto(){  \n    return this.http.get(\"enum_masters?category_name=health_diary\")\n   }\n  aboutUpdate(detail){\n\t  return this.http.post(\"health_details/about_update\",detail)\n  }\n  \n  aboutDetail(){\n\t  return this.http.get(\"health_details/about\")\n  }\n\n  getPreview(id){\n    return this.http.get(\"users/user_details?user_uid=\"+id)\n  }\n\n  setting(){\n    return this.http.get(\"users/picture_show\")\n  }\n\n  editprofile(val,id){\n    return this.http.put(\"users/\"+id,val)\n  }\n\n  sendimage(val){\n    return this.http.post(\"users/profile_picture\",val)\n  }\n\n  contactDetails(){\n    return this.http.get(\"emergency_details\")\n  }\n\n  addContacts(user_details){\n    return this.http.post(\"emergency_details\",user_details)\n  }\n\n  deleteData(id){\n    return this.http.delete(\"emergency_details/\"+id)\n  }\n  deleteCaregiver(id){\n    return this.http.get(\"emergency_details/caregiver_delete?cg_id=\"+id)\n  }\n\n  commonEventList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=DESC&&sort=created_at&&per_page=10&&page=\"+page)\n  }\n\n  commonDateEventList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=DESC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n\n  commonAppointmentDateEventList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=ASC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n \n  commonEventSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=DESC&&sort=created_at\")\n  }\n\n  commonDateEventSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=DESC&&sort=event_datetime\")\n  }\n\n  commonAppointmentSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=ASC&&sort=event_datetime\")\n  }\n\n  \n  commonVitalList(event_type,page)/*:Observable<any>*/ {\n    return this.http.get(\"events?event_type=\"+event_type+\"&&order=DESC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n\n  commonVitalSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&order=DESC&&sort=event_datetime\")\n  }  \n\n  commonDeleteEvent(id){\n    return this.http.delete(\"events/\"+id)\n  }\n\n  commonPost(record){\n    return this.http.post(\"events\",record)\n  }\n\n  vitalCommonPost(record){\n        return this.http.post(\"events/vital_update\",record)\n  }\n  commonUpdatePost(id,record){\n    return this.http.put(\"events/\"+id,record)\n  }\n\n  myEmergencyHealthDetail(){\n    return this.http.get(\"health_details\")\n  }\n\n  myEmergencyHealthUpdate(data){\n    return this.http.post(\"health_details\",data)\n  }\n\n  myEmergencyPreview(){\n    return this.http.get(\"users/preview\")\n  }\n\n  reportType(){\n    return this.http.get(\"enum_masters?category_name=report\")\n  }\n\n  deleteImage(data){\n    return this.http.post(\"events/delete_image\",data)\n  }\n\n  vitaldelete(data){\n    return this.http.put(\"events/vital_delete\",data) \n  }\n  vitalReading(){\n    return this.http.get(\"enum_masters?category_name=vital\")    \n  }\n  vitalFoodTime(){\n    return this.http.get(\"enum_masters?category_name=food_time\")\n\n  }\n  view_expenses(id){\n    return this.http.get(\"events/expense_list?user_id=\"+id);\n  \n  }\n  event_view_delete(id){\n    return this.http.delete(\"events/\"+id);\n  }\n  event_add_option(){\n    return this.http.get(\"enum_masters?category_name=spent_place\");\n  }\n  event_add(value){\n    return this.http.post(\"events\",value); \n  }\n  view_expenses_cal(id){\n    return this.http.get(\"events/expense_calculation?user_id=\"+id)\n  }\n  chartrepeat(id){\n    return this.http.get(\"events/expense_chart?user_id=\"+id)\n  }\n  main_chart(id){\n    return this.http.get(\"events/expense_cals_chart?user_id=\"+id)\n  }\n  filterChart(id,data){\n    return this.http.post(\"events/expense_chart_filter?user_id=\"+id,data)\n  }\n  filterAmount(from,to,id){\n    return this.http.get(\"events/expense_list?from_date=\"+from+\"&&end_date=\"+to+\"&&user_id=\"+id); \n  }\n\n  Appointmentdropdown(){\n    return this.http.get(\"enum_masters?category_name=appointment\")\n  }\n  appointmentDetails(data){\n    return this.http.post(\"events\",data)\n  }\n  \n  EditDetails(id,data){\n    return this.http.put(\"events/\"+id,data)\n  }\n  \n  recentAppointment(id){\n    return this.http.get(\"events/appointment_list?user_id=\"+id); \n  }\n  record_filter(data){\n    console.log(data)\n    return this.http.post(\"events/diary_recording?\",data)\n  }\n\n  completedAppointmentEventList(event_type,page){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&tab=history&&order=DESC&&sort=event_datetime&&per_page=10&&page=\"+page)\n  }\n  completedAppointmentSearchList(event_type,search){\n    return this.http.get(\"events?event_type=\"+event_type+\"&&search=\"+search+\"&&tab=history&&order=DESC&&sort=event_datetime\")\n  }\n\n  vitalFoodTime1(){\n    return this.http.get(\"enum_masters?category_name=food_time_1\")\n\n  }\n  vitalFoodTime2(){\n    return this.http.get(\"enum_masters?category_name=food_time_2\")\n\n  }\n  vitalEventListNew(id){\n    return this.http.get(\"events/vitals_list1?user_id=\"+id)\n  }\n  reading_history(event,id,page,count){\n    return this.http.get(\"events/vital_history?event_name=\"+event+\"&&user_id=\"+id+\"&&page=\"+page+\"&&per_page=\"+count)\n  }\n  filterReading(event,id,page,count,from,end){\n    return this.http.get(\"events/vital_history?event_name=\"+event+\"&&user_id=\"+id+\"&&page=\"+page+\"&&per_page=\"+count+\"&&from_date=\"+from+\"&&end_date=\"+end)\n\n  }\n  vitalEventList(id){\n    return this.http.get(\"events/vital_names_list?user_id=\"+id)\n  }\n  vitalfilter(id,data){\n    return this.http.post(\"events/vitals_list1?user_id=\"+id,data)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { SQL_TABLES } from './database.interface';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { from, Observable, forkJoin  } from 'rxjs';\n//import { NetworkService } from '../network-connectivity/network-service';\nimport { syncProvider } from '../sync/sync'\nimport { async } from 'q';\n\n/*\n  Generated class for the DatabaseProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\nconst DATA_BASE_NAME = 'vCare4U.db';\n\nenum user_type {\n    \"Emergency\" = 1,\n    \"Doctor\" = 2,\n    \"Care Giver\" = 3\n}\n\n@Injectable({providedIn:'root'})\nexport class DatabaseProvider {\n  \n  database: SQLiteObject;\n  ready: Promise<void>;\n  isNetworkOnline:boolean;\n  responseData1:any[];\n  responseData2:any[];\n  responseData3:any[];\n  responseData4:any[]; \n  \n    constructor(public http: HttpClient,public sqlite: SQLite, private platform: Platform,public syncProvide:syncProvider) {\n        this.Oninit();   \n    }\n\n    Oninit(){\n        console.log('Oninit')\n        //console.log(user_type[3])\n        this.ready = this.platform.ready()\n            .then(() => this.initializeDatabase())\n            .then(() => this.bootstrapTables())\n    }\n\n    initializeDatabase() {\n        console.log('initialize')\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then(async (db: SQLiteObject) => {\n           let sqlTable1 = `CREATE TABLE IF NOT EXISTS emergency_details(id INTEGER,emergency_id INTEGER PRIMARY KEY AUTOINCREMENT,contact_name TEXT DEFAULT NULL,emergency_no TEXT DEFAULT NULL,user_type TEXT,user_id INTEGER,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable1, []);\n           let sqlTable2 = `CREATE TABLE IF NOT EXISTS enum_masters(id INTEGER,name TEXT,category_name TEXT,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable2, []);\n           \n           let sqlTable4 = `CREATE TABLE IF NOT EXISTS health_details(id INTEGER,health_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT,attribute_name_value TEXT DEFAULT NULL,user_id INTEGER,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable4, []);\n           let sqlTable5 = `CREATE TABLE IF NOT EXISTS users(id INTEGER,name TEXT,email TEXT,password TEXT DEFAULT NULL,mobile_no TEXT DEFAULT NULL,address TEXT DEFAULT NULL,country TEXT DEFAULT NULL,blood_group TEXT DEFAULT NULL,age INTEGER DEFAULT NULL,user_uid TEXT,forgot_password_code TEXT DEFAULT NULL,user_picture TEXT DEFAULT NULL,active_status TEXT,role_id INTEGER,created_at DATETIME,updated_at DATETIME)`;  //userRecord_id INTEGER PRIMARY KEY AUTOINCREMENT\n           await db.executeSql(sqlTable5, []);\n           let sqlTable6 = `CREATE TABLE IF NOT EXISTS user_associations(id INTEGER,patient_id INTEGER,caregiver_id INTEGER,nick_name TEXT DEFAULT NULL,created_at DATETIME,updated_at DATETIME)`;\n           await db.executeSql(sqlTable6, []);\n           let sqlTable3 = `CREATE TABLE IF NOT EXISTS events(id INTEGER,event_id INTEGER PRIMARY KEY AUTOINCREMENT,event_name TEXT,description TEXT,value TEXT DEFAULT NULL,event_datetime INTEGER,event_type TEXT,event_category TEXT,event_assets TEXT DEFAULT NULL,event_options TEXT DEFAULT NULL,user_id INTEGER,created_at DATETIME,updated_at DATETIME,sync BOOLEAN)`;\n           await db.executeSql(sqlTable3, [])\n           .then(async() =>{\n             let sqlTableIndex = `CREATE INDEX IF NOT EXISTS event_index on events(event_type, event_datetime, created_at)`;\n             await db.executeSql(sqlTableIndex, []);  \n           });\n\n        })\n    }\n\n   async bootstrapTables(){\n        console.log('bootstrap')\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            return db.executeSql(`SELECT * FROM enum_masters`, []).then(async (data) => {\n            console.log('bootstrap1')\n            //   if(data.rows.length==0){\n            //    await this.getTotalEnumMasters(db);\n            //   }\n            //   let user_id = await this.getuserID();\n            //   if(user_id!=undefined){\n            //     await this.awaitAllUsersTableData(db);\n            //   }\n             await this.syncProvide.initiateSync();\n            }) \n        }) \n    }\n\n    getDatabase() {\n        return this.ready.then(() => {\n            return this.sqlite.create({\n                name: DATA_BASE_NAME,\n                location: 'default'\n            }).then((db: SQLiteObject) => {\n                return db;\n            })\n        });\n    }\n\n    async createAnEvent(data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `INSERT INTO events VALUES (NULL,NULL,?,?,?,?,?,?,?,?,?,?,?,?)`;\n            let createEventData = [data[\"event_name\"],data[\"description\"],data[\"value\"],data[\"event_datetime\"],data[\"event_type\"],data[\"event_category\"],data[\"event_assets\"],JSON.stringify(data[\"event_options\"]),user_id,new Date().toJSON(),new Date().toJSON(),false]\n            return db.executeSql(sql,createEventData).then((row: any)=>{  \n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            });\n        })\n    }\n\n    async updateAnEvent(id,data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `UPDATE events SET id = ?, event_name = ?, description = ?, value = ?, event_datetime = ?, event_type = ?, event_category = ?, event_assets = ?, event_options = ?, user_id = ?, created_at = ?, updated_at = ?, sync = ? WHERE event_id = ?`;\n            let updateEventData = [data[\"id\"],data[\"event_name\"],data[\"description\"],data[\"value\"],data[\"event_datetime\"],data[\"event_type\"],data[\"event_category\"],data[\"event_assets\"],JSON.stringify(data[\"event_options\"]),user_id,data[\"created_at\"],new Date().toJSON(),false,id]\n            \n            return db.executeSql(sql,updateEventData).then((row: any)=>{\n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            })\n        })\n    }\n\n    async updateAnEventImage(id,data) {\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `UPDATE events SET event_options = ? WHERE event_id = ?`;\n            let updateEventImageData = [JSON.stringify(data[\"event_options\"]),id]\n            \n            return db.executeSql(sql,updateEventImageData).then((row: any)=>{\n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            })\n        })\n    }\n\n    deleteAnEvent(id){\n       return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => { \n          let sql = `DELETE FROM events WHERE event_id = ?`;\n          return db.executeSql(sql,[id]).then((row: any)=>{\n            return { event_id:row.insertId }\n         }).catch(res=>{\n            return res;\n         });\n        })\n    }\n\n    async updateUserAndPolicyData(data){\n      let user_id = await this.getuserID();\n      let user_data = data['user'];\n      let policy_data = data['policy'];\n      policy_data[\"name\"]=\"policy\";\n      return this.sqlite.create({\n        name: DATA_BASE_NAME,\n        location: 'default'\n      }).then(async(db: SQLiteObject) => {\n           \n         let sql = `UPDATE users SET age = ?, blood_group = ? WHERE id = ? AND role_id = ?`;\n         let updateUserData = [user_data['age'],user_data['blood_group'],user_id,1];\n         await db.executeSql(sql,updateUserData);\n         db.executeSql(`SELECT * FROM health_details WHERE name='${policy_data['name']}'`).then(async(data)=>{\n           if(data.rows.length>0){\n             let id = data.rows.item(0).health_id;\n             this.updateHealthData(policy_data,id);\n           }else{\n             this.updateHealthData(policy_data);\n           } \n         })\n      })     \n    }\n\n    async createEmergencyContacts(data) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            let sql = `INSERT INTO emergency_details VALUES (NULL,NULL,?,?,?,?,?,?)`;\n            let createEventData = [data[\"contact_name\"],data[\"emergency_no\"],user_type[data[\"user_type\"]],user_id,new Date().toJSON(),new Date().toJSON()]\n            return db.executeSql(sql,createEventData).then((row: any)=>{  \n                return { event_id:row.insertId }\n            }).catch(res=>{\n                return res;\n            });\n        })\n    }\n\n    deleteEmergencyContact(id){\n       return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => { \n          let sql = `DELETE FROM emergency_details WHERE emergency_id = ?`;\n          return db.executeSql(sql,[id]).then((row: any)=>{\n            return { event_id:row.insertId }\n         }).catch(res=>{\n            return res;\n         });\n        })\n    }\n\n    async updateHealthData(data?,id?) {\n        let user_id = await this.getuserID();\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            return db.executeSql(`SELECT * FROM health_details WHERE name='${data['name']}'`).then(async(data)=>{\n              let sqlQuery:any;\n              let healthData:any;\n\n              if(data.rows.length>0){\n                sqlQuery = `UPDATE health_details SET id = ?, name = ?, attribute_name_value = ?, user_id = ?, created_at = ?, updated_at = ? WHERE health_id = ?`;\n                healthData = [data[\"id\"],data[\"name\"],JSON.stringify(data[\"attribute_name_value\"]),user_id,data[\"created_at\"],new Date().toJSON(),id]    \n              }else{\n                sqlQuery = `INSERT INTO health_details VALUES (NULL,NULL,?,?,?,?,?)`;\n                healthData = [data[\"name\"],JSON.stringify(data[\"attribute_name_value\"]),user_id,new Date().toJSON(),new Date().toJSON()];\n              }\n              \n              return db.executeSql(sqlQuery,healthData).then((row: any)=>{\n                    return { event_id:row.insertId }\n              }).catch(res=>{\n                    return res;\n              })\n            }).catch(res=>{\n                return res;\n            })\n        })\n    }\n\n    deleteDataFromTable(){\n        return this.sqlite.create({\n            name: DATA_BASE_NAME,\n            location: 'default'\n        }).then((db: SQLiteObject) => { \n           for(let i in SQL_TABLES){\n            let sql = `DELETE FROM ${SQL_TABLES[i]}`;\n            db.executeSql(sql,[]);\n           } \n          \n        })\n    }\n\n    getuserID(){\n        let user_id:any=null;\n        if(localStorage.getItem(\"user_id\")!=undefined){\n            user_id=localStorage.getItem(\"user_id\");\n            return user_id;\n        }\n        \n        return user_id\n    }\n\n}\n"],"sourceRoot":""}